 #!/bin/bash

#The first line of the script is called SHEBANG
#SHEBANG line tells us the following script should be execute using bash interpreter

# TASK  2:  echo
#echo command is used to print the text on display in linux
echo "Welcome you all to the BashBlaze-7-Days-of-Bash-Scripting-Challenge"
                                                              
# TASK  3:  Variables
# We declare a variable in bash as shown below
# Variable_name=Value
# There are 2 types of variables 
a.System Variables - 
b.User defined variables - 

USER_NAME="Niranjan Janginmath"
COURSE="Bash Scripting"
DATE_OF_TODAY=`date`
VAR1=200
VAR2=100
ADD=$ ((VAR1+VAR2))
SUB=$ ((VAR1-VAR2))



# TASK  4:  Using variables
echo
echo "My system username is $USER_NAME, we will learn $COURSE concepts variable and wildcards on $DATE_OF_TODAY session"
echo
echo -e "Addition(VAR1+VAR2)=$ADD\nSubtraction(VAR1-VAR2)=$SUB"
echo



# TASK  5:   Using Built-in Variables
echo "My username of the system - $USER"
echo "My current bash path - $BASH"
echo "Bash version I am using - $BASH_VERSION"
echo "PID of bash I am running - $$"
echo "User's home directory - $HOME"
echo "Display Current working directory - $PWD"
echo "Display the hostname of system - $HOSTNAME"
echo "Display path - $PATH"



# Task  6: Wildcards
#  *         all character
#  ?         only one character
#  -         range of character
#  ~         users home directory
#  []        set of character
#  n*        only filenames beginning with "n"
#  *n        only filenames ending with "n"
#  *n*       only filenames containing a "n"
#  [!n]*     only filenames where first character is not "n"
#  ???*      only filenames that contain a number 
#  *[[:digit]]*  only filenames that contains a number



echo "Files with .txt extension in the current directory:"
ls *.txt

echo "Display .log extension in /var directory"
ls /var/log/*.log | more 

cp *.txt	/opt 							#  to copy all .txt extension files to opt directory



#  ^ symbol called as cap or hat denotes beginning of the line 
#  $ symbol called as cap or hat denotes ending of the line

echo "Display only the directories/folders in the current directory"
ls -l | grep "^d" 



#Using backslash "\" : nullify the speciality of only one character at a time 
echo I need $5000 money  # you may get error 
echo I need \$5000 money 


#Using Single quotes: all character treated as normal character
echo Jenkins; Update [y/n]          # you may get error 
echo 'Jenkins; Update [y/n]'        # special character are treated as normal character and display wholw sentence


#Using Double quotes: all character treated as normal character except $ `(back tick) \ 
#Use double quotes "" for variables and command substitution
echo "Today is $(date)"
USER_NAME="Niranjan Janginmath"
COURSE="Bash Scripting"
echo $USER_NAME
echo $COURSE
echo $1=77 rupees 
echo "\$1= 77 rupees"






#Make sure to provide execution permission with the following command:
#chmod +x day1_script.sh





